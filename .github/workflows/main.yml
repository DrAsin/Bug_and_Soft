name: Build project

on: 
  push:
    tags:
      - 'v*'
  pull_request:
    tags:
      - 'v*'


jobs:
  createRelease:
    name: Create Release for tag ${{ github.ref }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Creating Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release - ${{ env.GITHUB_RUN_NUMBER }}
          draft: false
          prerelease: true
  buildForAllSupportedPlatforms:
    name: Building ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          #- Android # Build an Android .apk standalone app.
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          buildsPath: ./build
      - uses: actions/upload-artifact@v2
        id: uarti
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.uarti.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: build/${{ matrix.targetPlatform }}
          asset_name: my-artifact.zip
          asset_content_type: application/zip
          